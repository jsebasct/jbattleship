/*
 * Principal.java
 *
 * Created on 4 de febrero de 2008, 0:06
 */
package serialworks.visual;

import serialworks.app.build.field.BuildField;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import serialworks.ship.Ship;

/**
 * This class is the initial welcome window. Gives options to get out or to
 * initialize a new game.
 *
 * @author bastian
 */
public class Principal extends javax.swing.JFrame {

    private BuildField buildField = null;
    private BattleField battleField = null;

    /**
     * Creates new form Principal
     */
    public Principal() {
        centerScreen();
        initComponents();
    }

    private void centerScreen() {
        Dimension pan = Toolkit.getDefaultToolkit().getScreenSize();
        int x = pan.width / 2 - (250);
        int y = pan.height / 2 - 200;
        setBounds(x, y, 153, 153);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMainContainer = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblGameName = new javax.swing.JLabel();
        btnStartGame = new javax.swing.JButton();
        lblCorporativeDuke = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 204, 255));
        setResizable(false);

        panelMainContainer.setBackground(new java.awt.Color(102, 102, 255));

        lblTitle.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 102));
        lblTitle.setText("                  SerialWorksJava is proud to present: ");
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lblGameName.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        lblGameName.setForeground(new java.awt.Color(255, 255, 120));
        lblGameName.setText("BattleShip");

        btnStartGame.setText("GO");
        btnStartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartGameActionPerformed(evt);
            }
        });

        lblCorporativeDuke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/serialworks/visual/image/miDibujo.PNG"))); // NOI18N
        lblCorporativeDuke.setToolTipText("AquiVendraUnaImagen");
        lblCorporativeDuke.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnExit.setText("Exit");
        btnExit.setToolTipText("SalirDelJuego");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMainContainerLayout = new javax.swing.GroupLayout(panelMainContainer);
        panelMainContainer.setLayout(panelMainContainerLayout);
        panelMainContainerLayout.setHorizontalGroup(
            panelMainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                    .addGroup(panelMainContainerLayout.createSequentialGroup()
                        .addComponent(lblCorporativeDuke, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelMainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMainContainerLayout.createSequentialGroup()
                                .addComponent(btnStartGame)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExit))
                            .addComponent(lblGameName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelMainContainerLayout.setVerticalGroup(
            panelMainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainContainerLayout.createSequentialGroup()
                        .addComponent(lblGameName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addGroup(panelMainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnStartGame)
                            .addComponent(btnExit)))
                    .addComponent(lblCorporativeDuke, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMainContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMainContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void btnStartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartGameActionPerformed
        buildField = new BuildField(this, (byte) 5);
        buildField.setVisible(true);
    }//GEN-LAST:event_btnStartGameActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
}//GEN-LAST:event_btnExitActionPerformed

    /**
     * Medio extraño que sea publico ¿no?, pero es asi para que pueda recibir de
     * uno de sus contenedores, la info de lo que es las naves
     *
     * @param ships
     */
    public void obtainShips(Ship[] ships) {
        boolean servidor = true;

        if (ships == null) {
            System.out.println("Ships en Principal es NULL");
            System.exit(-1);
        }

        //---------------------------

        String string1 = "Si, por favor";
        String string2 = "De ninguna manera";
        Object[] options = {string1, string2};

        boolean salir = false;
        String ip = null;

        do {

            int n = JOptionPane.showOptionDialog(this,
                    "Deseas conectarte a alguien?",//mensaje
                    "Cliente o Servidor",//titulo
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, //don't use a custom Icon
                    options, //the titles of buttons
                    string1); //the title of the default button

            if (n == JOptionPane.YES_OPTION) {
                //System.out.println("You're kidding!");
                salir = true;
                servidor = false;


                do {
                    ip = JOptionPane.showInputDialog("Porfa Ingrese el IP "
                            + "\n" + "al que te conectaras");
                    System.out.println(ip);

                    if (ip == null /*|| inputValue.equals("") */) {
                        ip = "?";
                    }

                } while ((!ipValida(ip)));


            } else if (n == JOptionPane.NO_OPTION) {
                //System.out.println("I don't like them, either.");
                salir = true;
                servidor = true;

            } else if (n == JOptionPane.CLOSED_OPTION) {
                System.out.println("No lo cierres");
            } else {
                System.out.println("Do it again!");
            }

        } while (!salir);

        battleField = new BattleField(ships, servidor, ip);

        this.setVisible(false);

        battleField.setVisible(true);
    }

    private boolean ipValida(String input) {
        boolean res = true;
        //System.out.println( "Ingreso esto: " + input );

        if (!input.equalsIgnoreCase("localhost")) {
            String[] result = input.split("\\.");


            for (int x = 0; x < result.length; x++) {
                System.out.println(result[x]);
            }

            if (result.length != 4) {

                res = false;

            } else {

                int i = 0;

                while ((i < result.length) && (res == true)) {
                    String aux = result[i];
                    int num = 0;

                    try {
                        num = Integer.parseInt(aux);
                        if (num < 0 && num > 255) {
                            System.out.println(num);
                            res = false;
                        }
                    } catch (NumberFormatException ex) {
                        res = false;
                    }
                    //finally{
                    i++;
                    //}
                }
            }
        }

        return res;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnStartGame;
    private javax.swing.JLabel lblCorporativeDuke;
    private javax.swing.JLabel lblGameName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel panelMainContainer;
    // End of variables declaration//GEN-END:variables
}
