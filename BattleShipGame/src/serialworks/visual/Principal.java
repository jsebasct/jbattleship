/*
 * Principal.java
 *
 * Created on 4 de febrero de 2008, 0:06
 */
package serialworks.visual;

//import javax.swing.JDialog;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import serialworks.ship.Ship;

/**
 *
 * @author  bastian
 */
public class Principal extends javax.swing.JFrame {

    private BuildField buildField = null;
    private BattleField battleField = null;

    /** Creates new form Principal */
    public Principal() {
        
        Dimension pan = Toolkit.getDefaultToolkit().getScreenSize();        
        System.out.println("Width" + this.getWidth() );
        System.out.println("Heigth" + this.getHeight() );
        int x = pan.width/2 - (250);
        int y = pan.height/2 - 200;        
        setBounds( x, y, 153, 153 );
        
        initComponents();
        addMyStuff();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        labelNameGame = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        labelDuke = new javax.swing.JLabel();
        bExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 204, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        labelTitle.setFont(new java.awt.Font("Comic Sans MS", 0, 18));
        labelTitle.setForeground(new java.awt.Color(255, 255, 102));
        labelTitle.setText("                  SerialWorksJava is proud to present: ");
        labelTitle.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        labelNameGame.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        labelNameGame.setForeground(new java.awt.Color(255, 255, 120));
        labelNameGame.setText("BattleShip");

        jButton1.setText("GO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        labelDuke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/serialworks/visual/image/miDibujo.PNG"))); // NOI18N
        labelDuke.setToolTipText("AquiVendraUnaImagen");
        labelDuke.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bExit.setText("Exit");
        bExit.setToolTipText("SalirDelJuego");
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelDuke, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(bExit))
                            .addComponent(labelNameGame, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(206, 206, 206)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labelNameGame, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(bExit)))
                    .addComponent(labelDuke, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        buildField = new BuildField(this, (byte) 5);
        buildField.setVisible(true);
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        System.exit(0);
}//GEN-LAST:event_bExitActionPerformed

    private void addMyStuff() {
    //battle
    }

    /**
     * Medio extraño que sea publico ¿no?, pero es asi para
     * que pueda recibir de uno de sus contenedores, la info de lo que es
     * las naves
     * @param ships
     */
    public void obtainShips(Ship[] ships) {
        boolean servidor = true;

        if (ships == null) {
            System.out.println("Ships en Principal es NULL");
            System.exit(-1);
        }

        //---------------------------

        String string1 = "Si, por favor";
        String string2 = "De ninguna manera";
        Object[] options = {string1, string2};

        boolean salir = false;
        String ip = null;

        do {

            int n = JOptionPane.showOptionDialog(this,
                    "Deseas conectarte a alguien?",//mensaje
                    "Cliente o Servidor",//titulo
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, //don't use a custom Icon
                    options, //the titles of buttons
                    string1); //the title of the default button

            if (n == JOptionPane.YES_OPTION) {
                //System.out.println("You're kidding!");
                salir = true;
                servidor = false;


                do {
                    ip = JOptionPane.showInputDialog("Porfa Ingrese el IP " +
                            "\n" + "al que te conectaras");
                    System.out.println(ip);

                    if (ip == null /*|| inputValue.equals("") */) {
                        ip = "?";
                    }

                } while ((!ipValida(ip)));


            } else if (n == JOptionPane.NO_OPTION) {
                //System.out.println("I don't like them, either.");
                salir = true;
                servidor = true;

            } else if (n == JOptionPane.CLOSED_OPTION) {
                System.out.println("No lo cierres");
            } else {
                System.out.println("Do it again!");
            }

        } while (!salir);

        battleField = new BattleField(ships, servidor, ip);
        
        this.setVisible(false);
        
        battleField.setVisible(true);
    }

    private boolean ipValida(String input) {
        boolean res = true;
        //System.out.println( "Ingreso esto: " + input );

        if (!input.equalsIgnoreCase("localhost")) {
            String[] result = input.split("\\.");


            for (int x = 0; x < result.length; x++) {
                System.out.println(result[x]);
            }

            if (result.length != 4) {

                res = false;

            } else {

                int i = 0;

                while ((i < result.length) && (res == true)) {
                    String aux = result[i];
                    int num = 0;

                    try {
                        num = Integer.parseInt(aux);
                        if (num < 0 && num > 255) {
                            System.out.println(num);
                            res = false;
                        }
                    } catch (NumberFormatException ex) {
                        res = false;
                    }
                    //finally{
                    i++;
                //}
                }
            }
        }

        return res;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExit;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelDuke;
    private javax.swing.JLabel labelNameGame;
    private javax.swing.JLabel labelTitle;
    // End of variables declaration//GEN-END:variables
}
